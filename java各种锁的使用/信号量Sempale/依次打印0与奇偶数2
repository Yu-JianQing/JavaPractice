//依次打印0与奇偶数
import java.util.concurrent.Semaphore;
import java.util.function.IntConsumer;

class ZeroEvenOdd2 {
    private int n;
    private Semaphore sp1=new Semaphore(1);
    private Semaphore sp2=new Semaphore(0);
    private Semaphore sp3=new Semaphore(0);
    
    public ZeroEvenOdd2(int n) {
        this.n = n;
    }

    // printNumber.accept(x) outputs "x", where x is an integer.
    public void zero(IntConsumer printNumber) throws InterruptedException {
        for(int i=1;i<=n;i++){
        	sp1.acquire();
        	printNumber.accept(0);
        	if(i%2==0){
        		sp2.release();
        	}else {
				sp3.release();
			}
        }
    }

    public void even(IntConsumer printNumber) throws InterruptedException {
    	for(int i=1;i<=n;i++){
    		if(i%2==0){
    			sp2.acquire();
    			printNumber.accept(i);
    			sp1.release();
    		}
    	}
    }

    public void odd(IntConsumer printNumber) throws InterruptedException {
    	for(int i=1;i<=n;i++){
    		if(i%2!=0){
    			sp3.acquire();
    			printNumber.accept(i);
    			sp1.release();
    		}
    	}
    }
}