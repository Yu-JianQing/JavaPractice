二叉搜索树与双向链表
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;
    public TreeNode(int val) {
        this.val = val;
    }
}
*/
import java.util.Stack;
public class Solution {
    private Stack<TreeNode> stack=new Stack<TreeNode>();
    public TreeNode Convert(TreeNode pRootOfTree) {
        if(pRootOfTree==null)
            return null;
        TreeNode node=pRootOfTree;
        TreeNode pre=null;
        TreeNode root=null;
        boolean isFirst=true;
        while(node!=null||!stack.isEmpty()){
            while(node!=null){
                stack.push(node);
                node=node.left;
            }
            node=stack.pop();
            if(isFirst){
                root=node;
                pre=node;
                isFirst=false;
            }else{
                node.left=pre;
                pre.right=node;
                pre=node;
            }
            node=node.right;
        }
        return root;
    }
}