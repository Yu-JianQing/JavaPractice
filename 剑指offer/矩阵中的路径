矩阵中的路径
public class Solution {
    public boolean hasPath(char[] matrix, int rows, int cols, char[] str)
    {
        if(matrix==null||str==null||rows<1||cols<1)
            return false;
        boolean visit[]=new boolean[rows*cols];
        for(int i=0;i<visit.length;i++)
            visit[i]=false;
        for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
                if(findPath(matrix, rows, cols, i,j,str,0,visit))
                    return true;
            }
        }
        return false;
    }

    public boolean findPath(char[] matrix, int rows, int cols, int curRow,int curCol,char[] str,int strIndex,boolean visit[]){
        int cur=curRow*cols+curCol;
        if(curRow<0||curCol<0||curRow>=rows||curCol>=cols||visit[cur]||str[strIndex]!=matrix[cur])
            return false;
        visit[cur]=true;
        if(strIndex==str.length-1)
            return true;
        strIndex++;
        if(findPath(matrix,rows, cols,  curRow-1,curCol, str, strIndex,visit)||
              findPath(matrix,rows, cols,  curRow+1,curCol, str, strIndex,visit)||
              findPath(matrix,rows, cols,  curRow,curCol-1, str, strIndex,visit)||
              findPath(matrix,rows, cols,  curRow,curCol+1, str, strIndex,visit))
            return true;
        visit[cur]=false;
        return false;
    }
}