给定一个字符串 s，找到 s 中最长的回文子串。
暴力解法；采用滑动窗口，先对最长的字符子串进行判断，下来对长度减一的几条子串进行判断
public class Solution {
    private boolean isPlalindrome(char str[],int start,int end){
        while(start<=end){
        	if(str[start]!=str[end])
    		return false;
    	start++;
    	end--;
        }
        return true;
    }
    public String getLongest(String s){
        if(s==null||s.length()==0)
	return "";
        char str[]=s.toCharArray();
        int end=str.length-1;
        while(end>=0){
	for(int i=0;i<str.length-end;i++){//每次共str.length-end个滑动窗口
	        if(isPlalindrome(str, i, i+end))
		//每次滑动窗口的大小为end(0,end),(1,end+1)等(0,6)(1,7)
		return s.substring(i, i+end+1);
	}
	 end--;
        }
        return "";
    }
}