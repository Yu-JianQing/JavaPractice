package YiSTE_2;

public class CopyOfEaterThread extends Thread{
	private final Tool leftHand;
	private final Tool rightHand;
	private String personName;
	
	public CopyOfEaterThread(String personName,Tool leftHand,Tool rightHand) {
		this.leftHand=leftHand;
		this.rightHand=rightHand;
		this.personName=personName;
	}
	
	public synchronized void eat(){//竞争的资源是勺子和叉子但是勺子和叉子只够一个人使用的，则只要保证同一时刻
														//只有一个人同时获取了勺子和叉子并且吃饭，所以再吃的方法前加锁以保证只有一个人吃
														//这不同于哲学家进餐问题，哲学家进餐问题同一时刻可以有多个人在吃饭
		synchronized(leftHand){//这是竞争资源
			System.out.println(this.personName+"拿起"+this.leftHand);
			synchronized (rightHand) {//这是竞争资源
				System.out.println(this.personName+"拿起"+this.rightHand);
				System.out.println(this.personName+"吃饭");
				System.out.println(this.personName+"放下"+this.rightHand);
			}
			System.out.println(this.personName+"放下"+this.leftHand);
		}		
	}
	
	public void run(){
		while(true){
			this.eat();
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
	}
	
}
